}
line(y = tw_tc2, x = tc_series,type = "l",col="red")
line(y = tw_tc2, x = tc_series,type = "l",col="red")
lines(y = tw_tc2, x = tc_series,type = "l",col="red")
tw_tc2 = NULL
for (tc in tc_series){
fid="BEST-djia.csv"
best_result = best_run(fid,data_matrix,tc=0.005)
tw_tc2 = c(tw_tc2,best_result)
}
lines(y = tw_tc2, x = tc_series,type = "l",col="red")
lines(y = unlist(tw_tc2), x = tc_series,type = "l",col="red")
tw_tc2
tw_tc2 = NULL
tw_tc2 = NULL
for (tc in tc_series){
fid="BEST-djia.csv"
best_result = best_run(fid,data_matrix,tc=0.005)[1]
tw_tc2 = c(tw_tc2,best_result)
}
lines(y = unlist(tw_tc2), x = tc_series,type = "l",col="red")
tw_tc2
tw_tc2 = NULL
for (tc in tc_series){
fid="BEST-djia.csv"
best_result = best_run(fid,data_matrix,tc)[1]
tw_tc2 = c(tw_tc2,best_result)
}
lines(y = unlist(tw_tc2), x = tc_series,type = "l",col="red")
tw_tc2
tc_series
tc = 0.002
fid="BEST-djia.csv"
best_result = best_run(fid,data_matrix,tc)[1]
best_result
fid="BEST-djia.csv"
best_result = best_run(fid,data_matrix,0.001)[1]
best_result
tw_tc
tc = 0.001
varagins=c(5,5,tc)
fid="rmr-djia.csv"
rmr_result = rmr(fid,data_matrix,varagins)[1]
rmr_result
best_run(fid,data_matrix,0.001)[1]
fid="pamr-djia.csv"
pamr_result = pamr_run(fid,data_matrix,0.001)
pamr_result[1]
plot(y = tw_tc2, x = tc_series,type = "l",ylab="Terminal Wealth",xlab="Transaction Cost")
plot(y = tw_tc, x = tc_series,type = "l",ylab="Terminal Wealth",xlab="Transaction Cost",ylim=c(0,6))
lines(y = tw_tc2, x = tc_series,type = "l",ylab="Terminal Wealth",xlab="Transaction Cost")
varagins=c(5,5,0)
fid="rmr-djia.csv"
rmr_result = rmr(fid,data_matrix,varagins)[1]
rmr_result
tc = 0
best_result = best_run(fid,data_matrix,tc)[1]
best_result
library(readxl)
path <- ('Data(Haolin)')
#input
pathname <- file.path(path,'IBOV.xlsx')
#data_1 <- as.vector(readMat(pathname))
data_matrix <- read_excel(pathname, sheet = "P4", skip=4, col_names = FALSE)
data_matrix <- data.matrix(data_matrix[,2:ncol(data_matrix)])
varagins=c(5,5,0)
fid="rmr-djia.csv"
rmr_result = rmr(fid,data_matrix,varagins)[1]
rmr_result
library(readxl)
path <- ('Data(Haolin)')
#input
pathname <- file.path(path,'BE500.xlsx')
#data_1 <- as.vector(readMat(pathname))
data_matrix <- read_excel(pathname, sheet = "P3", skip=4, col_names = FALSE)
data_matrix <- data.matrix(data_matrix[,2:ncol(data_matrix)])
varagins=c(5,5,0)
fid="rmr-djia.csv"
rmr_result = rmr(fid,data_matrix,varagins)[1]
rmr_result
best_result = best_run(fid,data_matrix,tc)[1]
best_result
#install.packages('R.matlab')
#library("R.matlab")
#install.packages("readxl")
#install.packages("stats")
#library(stats)
library(readxl)
path <- ('Data(Haolin)')
#input
pathname <- file.path(path,'TWSE.xlsx')
#data_1 <- as.vector(readMat(pathname))
data_matrix <- read_excel(pathname, sheet = "P3", skip = 4, col_names = FALSE)
data_matrix <- data.matrix(data_matrix[,2:ncol(data_matrix)])
#data_matrix <- data_matrix[complete.cases(data_matrix),]
#class(data_1)
#print(data_1)
#data_matrix <- as.matrix(as.data.frame(data_1))
source("plot/ra_result_analyze.R")
source("plot/rmr.R")
source("plot/PAMR.r")
source("plot/olmar.R")
source("plot/MARKET.R")
source("plot/BEST.R")
t = nrow(data_matrix)
m = ncol(data_matrix)
tc_series = seq(0.002,0.001,by = -0.0001)
tw_tc = NULL
for (tc in tc_series) {
varagins = c(5,5,0)
fid = "rmr-djia.csv"
rmr_result = rmr(fid,data_matrix,varagins)[1]
tw_tc = c(tw_tc,rmr_result)
}
#install.packages('R.matlab')
#library("R.matlab")
#install.packages("readxl")
#install.packages("stats")
#library(stats)
library(readxl)
path <- ('Data(Haolin)')
#input
pathname <- file.path(path,'TWSE.xlsx')
#data_1 <- as.vector(readMat(pathname))
data_matrix <- read_excel(pathname, sheet = "P3", skip = 4, col_names = FALSE)
data_matrix <- data.matrix(data_matrix[,2:ncol(data_matrix)])
#data_matrix <- data_matrix[complete.cases(data_matrix),]
#class(data_1)
#print(data_1)
#data_matrix <- as.matrix(as.data.frame(data_1))
source("plot/ra_result_analyze.R")
source("plot/rmr.R")
source("plot/PAMR.r")
source("plot/olmar.R")
source("plot/MARKET.R")
source("plot/BEST.R")
t = nrow(data_matrix)
m = ncol(data_matrix)
tc_series = seq(0.002,0.001,by = -0.0001)
tw_tc = NULL
for (tc in tc_series) {
varagins = c(5,5,tc)
fid = "rmr-djia.csv"
rmr_result = rmr(fid,data_matrix,varagins)[1]
tw_tc = c(tw_tc,rmr_result)
}
plot(y = tw_tc, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab="Transaction Cost",ylim=c(0,6))
tw_tc
plot(y = tw_tc, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab="Transaction Cost")
tw_tc2 = NULL
for (tc in tc_series) {
fid = "BEST-djia.csv"
best_result = best_run(fid,data_matrix,tc)[1]
tw_tc2 = c(tw_tc2,best_result)
}
lines(y = tw_tc2, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab = "Transaction Cost")
tw_tc2
#install.packages('R.matlab')
#library("R.matlab")
#install.packages("readxl")
#install.packages("stats")
#library(stats)
library(readxl)
path <- ('Data(Haolin)')
#input
pathname <- file.path(path,'BE500.xlsx')
#data_1 <- as.vector(readMat(pathname))
data_matrix <- read_excel(pathname, sheet = "P3", skip = 4, col_names = FALSE)
data_matrix <- data.matrix(data_matrix[,2:ncol(data_matrix)])
#data_matrix <- data_matrix[complete.cases(data_matrix),]
#class(data_1)
#print(data_1)
#data_matrix <- as.matrix(as.data.frame(data_1))
source("plot/ra_result_analyze.R")
source("plot/rmr.R")
source("plot/PAMR.r")
source("plot/olmar.R")
source("plot/MARKET.R")
source("plot/BEST.R")
t = nrow(data_matrix)
m = ncol(data_matrix)
tc_series = seq(0.002,0.001,by = -0.0001)
tw_tc = NULL
for (tc in tc_series) {
varagins = c(5,5,tc)
fid = "rmr-djia.csv"
rmr_result = rmr(fid,data_matrix,varagins)[1]
tw_tc = c(tw_tc,rmr_result)
}
plot(y = tw_tc, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab="Transaction Cost")
#tc=
tw_tc2 = NULL
for (tc in tc_series) {
fid = "BEST-djia.csv"
best_result = best_run(fid,data_matrix,tc)[1]
tw_tc2 = c(tw_tc2,best_result)
}
lines(y = tw_tc2, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab = "Transaction Cost")
tw_tc2
plot(y = tw_tc, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab="Transaction Cost",ylim=c(0,6))
lines(y = tw_tc2, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab = "Transaction Cost",col='red')
tw_tc3=NULL
tw_tc3=NULL
for (tc in tc_series) {
fid = "pamr-djia.csv"
pamr_result = pamr_run(fid,data_matrix,tc)[1]
tw_tc3 = c(tw_tc3,pamr_result)
}
lines(y = tw_tc3, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab = "Transaction Cost",col='blue')
tw_tc4=NULL
for (tc in tc_series) {
fid = "olmar-djia.csv"
olmar_result = olmar_run(fid,data_matrix,tc)[1]
tw_tc4 = c(tw_tc4,pamr_result)
}
lines(y = tw_tc4, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab = "Transaction Cost",col='yellow')
title("Total Wealth of Different Strategies in BE500 with Transaction cost",lwd = 3)
legend("topright",cex = 0.8,c("rmr","best","pamr","olmar"),col = c("black","red","blue","yellow"),lty = 1:4)
title("Total Wealth of Different Strategies in BE500 2007-2010 with Transaction cost",lwd = 3)
plot(y = tw_tc, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab="Transaction Cost",ylim=c(0,6))
lines(y = tw_tc2, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab = "Transaction Cost",col='red')
lines(y = tw_tc3, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab = "Transaction Cost",col='blue')
lines(y = tw_tc4, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab = "Transaction Cost",col='yellow')
title("Total Wealth of Different Strategies in BE500 2007-2010 with Transaction cost",lwd = 3)
legend("topright",cex = 0.8,c("rmr","best","pamr","olmar"),col = c("black","red","blue","yellow"),lty = 1:4)
plot(y = tw_tc, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab="Transaction Cost",ylim=c(0,6))
lines(y = tw_tc2, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab = "Transaction Cost",col='red')
lines(y = tw_tc3, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab = "Transaction Cost",col='blue')
lines(y = tw_tc4, x = tc_series,type = "l",ylab = "Terminal Wealth",xlab = "Transaction Cost",col='yellow')
title("Total Wealth of Different Strategies in BE500 2007-2010 with TC",lwd = 3)
legend("topright",cex = 0.8,c("rmr","best","pamr","olmar"),col = c("black","red","blue","yellow"),lty = 1:4)
olmar_run <- function(fid,data_matrix)
{
datamatrix1=data_matrix
n = nrow(datamatrix1)
m = ncol(datamatrix1)
cum_ret = 1
cumpro_ret = NULL
daily_ret = NULL
epsilon=10
alpha=0.5
tc=0
sumreturn=1
day_weight = as.matrix(rep(1/m,m))
day_weight_o = as.matrix(rep(0,m))
daily_portfolio = as.vector(rep(NULL,m))
phi=t(as.matrix(rep(1,m)))
for(i in seq(from=1, to=n))
{data<-t(as.matrix(datamatrix1[i,]))
if(i>=2){
phi=alpha+(1-alpha)*phi/datamatrix1[i-1,]
ell=max(0,epsilon-phi%*%day_weight)
xbar=mean(phi)
denominator=(phi-xbar)%*%t(phi-xbar)
if(denominator!=0){
lambda=ell/denominator
}else{
lambda=0
}
day_weight<-day_weight+as.numeric(lambda)*(t(phi)-xbar)
day_weight<-simplex_projection(day_weight,1)
}
day_weight<-day_weight/sum(day_weight)
if(i==1)
{
daily_portfolio=day_weight
}else{
daily_portfolio=cbind(daily_portfolio,day_weight)
}
daily_ret=cbind(daily_ret,(data%*%day_weight)*(1-tc/2*sum(abs(day_weight-day_weight_o))))
cum_ret=cum_ret*daily_ret[i]
cumpro_ret=cbind(cumpro_ret,cum_ret)
day_weight_o = day_weight*t(data)/daily_ret[i]
}
return(list(cum_ret,cumpro_ret,daily_ret))
}
#install.packages('R.matlab')
library("R.matlab")
#install.packages("readxl")
#install.packages("stats")
#library(stats)
#library(readxl)
path <- ('Data')
#input
pathname <- file.path(path,'djia.mat')
data_1 <- as.vector(readMat(pathname))
#data_matrix <- read_excel(pathname, sheet = "P4", skip=4, col_names = FALSE)
#data_matrix <- data.matrix(data_matrix[,2:ncol(data_matrix)])
#data_matrix <- data_matrix[complete.cases(data_matrix),]
#data_matrix <- read.csv(pathname,sep=',',stringsAsFactors = FALSE,skip=3,header=TRUE)
#class(data_1)
#print(data_1)
data_matrix <- as.matrix(as.data.frame(data_1))
#class(data_matrix)
fid = "olmar.txt"
#implementation
result = olmar_run(fid,data_matrix)
write.csv(file = "olmar.csv",result)
source("ra_result_analyze.R")
ra_result_analyze(paste(pathname,"olmar.csv",sep = '_'),data_matrix,as.numeric(result[[1]]),as.numeric(result[[2]]),as.numeric(result[[3]]))
result[[1]]
result[[2]]
result[[3]]
result[[2]]
result[[2]]
result[[3]]
#install.packages('R.matlab')
library("R.matlab")
#install.packages("readxl")
#install.packages("stats")
#library(stats)
#library(readxl)
path <- ('Data')
#input
pathname <- file.path(path,'sp500.mat')
data_1 <- as.vector(readMat(pathname))
#data_matrix <- read_excel(pathname, sheet = "P4", skip=4, col_names = FALSE)
#data_matrix <- data.matrix(data_matrix[,2:ncol(data_matrix)])
#data_matrix <- data_matrix[complete.cases(data_matrix),]
#data_matrix <- read.csv(pathname,sep=',',stringsAsFactors = FALSE,skip=3,header=TRUE)
#class(data_1)
#print(data_1)
data_matrix <- as.matrix(as.data.frame(data_1))
#class(data_matrix)
fid = "rmr.txt"
#implementation
parameters = c(5, 5, 0)
result = rmr(fid,data_matrix,parameters)
result[[1]]
olmar_run <- function(fid,data_matrix)
{
datamatrix1=data_matrix
n = nrow(datamatrix1)
m = ncol(datamatrix1)
cum_ret = 1
cumpro_ret = NULL
daily_ret = NULL
epsilon=10
alpha=0.5
tc=0
sumreturn=1
day_weight = as.matrix(rep(1/m,m))
day_weight_o = as.matrix(rep(0,m))
daily_portfolio = as.vector(rep(NULL,m))
phi=t(as.matrix(rep(1,m)))
for(i in seq(from=1, to=n))
{data<-t(as.matrix(datamatrix1[i,]))
if(i>=2){
phi=alpha+(1-alpha)*phi/datamatrix1[i-1,]
ell=max(0,epsilon-phi%*%day_weight)
xbar=mean(phi)
denominator=(phi-xbar)%*%t(phi-xbar)
if(denominator!=0){
lambda=ell/denominator
}else{
lambda=0
}
day_weight<-day_weight+as.numeric(lambda)*(t(phi)-xbar)
day_weight<-simplex_projection(day_weight,1)
}
day_weight<-day_weight/sum(day_weight)
if(i==1)
{
daily_portfolio=day_weight
}else{
daily_portfolio=cbind(daily_portfolio,day_weight)
}
daily_ret=cbind(daily_ret,(data%*%day_weight)*(1-tc/2*sum(abs(day_weight-day_weight_o))))
cum_ret=cum_ret*daily_ret[i]
cumpro_ret=cbind(cumpro_ret,cum_ret)
day_weight_o = day_weight*t(data)/daily_ret[i]
}
return(list(cum_ret,cumpro_ret,daily_ret))
}
#install.packages('R.matlab')
library("R.matlab")
#install.packages("readxl")
#install.packages("stats")
#library(stats)
#library(readxl)
path <- ('Data')
#input
pathname <- file.path(path,'sp500.mat')
data_1 <- as.vector(readMat(pathname))
#data_matrix <- read_excel(pathname, sheet = "P4", skip=4, col_names = FALSE)
#data_matrix <- data.matrix(data_matrix[,2:ncol(data_matrix)])
#data_matrix <- data_matrix[complete.cases(data_matrix),]
#data_matrix <- read.csv(pathname,sep=',',stringsAsFactors = FALSE,skip=3,header=TRUE)
#class(data_1)
#print(data_1)
data_matrix <- as.matrix(as.data.frame(data_1))
#class(data_matrix)
fid = "olmar.txt"
#implementation
result = olmar_run(fid,data_matrix)
result[[1]]
source("plot/rmr.R")
source("ra_result_analyze.R")
source("plot/rmr.R")
source("plot/PAMR.r")
source("plot/olmar.R")
source("plot/MARKET.R")
source("plot/BEST.R")
source("plot/ARMA.R")
library("forecast")
library("R.matlab")
path <- ('Data')
pathname <- file.path(path,'sp500.mat')
data_1 <- as.vector(readMat(pathname))
data_matrix <- as.matrix(as.data.frame(data_1))
t = nrow(data_matrix)
m = ncol(data_matrix)
varagins=c(5,5,0)
rmr_result = rmr(fid,data_matrix,varagins)
plot(seq(from = 1, to = t),t(rmr_result[[2]]),col="black",type="l",ylim=c(0,4.5),xlab="TIME",ylab="TOTAL WEALTH in SP500")
rmr_result[[2]]
rmr_result[[2]][end]
rmr_result[[2]][-1]
tail(rmr_result[[2]],n=1)
fid="olmar-sp500.csv"
olmar_result = olmar_run(fid,data_matrix,tc)
tail(olmar_result[[2]],n=1)
tail(as.numeric(olmar_result[[2]]),n=1)
lines(seq(from = 1, to = t),t(olmar_result[[2]]),col="green",type="l")
#install.packages('R.matlab')
#library("R.matlab")
#install.packages("readxl")
#install.packages("stats")
#library(stats)
library(readxl)
path <- ('Data(Haolin)')
#input
pathname <- file.path(path,'BE500.xlsx')
#data_1 <- as.vector(readMat(pathname))
data_matrix <- read_excel(pathname, sheet = "P3", skip = 4, col_names = FALSE)
data_matrix <- data.matrix(data_matrix[,2:ncol(data_matrix)])
#data_matrix <- data_matrix[complete.cases(data_matrix),]
#class(data_1)
#print(data_1)
#data_matrix <- as.matrix(as.data.frame(data_1))
source("plot/ra_result_analyze.R")
source("plot/rmr.R")
source("plot/PAMR.r")
source("plot/olmar.R")
source("plot/MARKET.R")
source("plot/BEST.R")
t = nrow(data_matrix)
m = ncol(data_matrix)
tc = 0.0002
varagins = c(5,5,tc)
fid = "rmr-djia.csv"
rmr_result = rmr(fid,data_matrix,varagins)[1]
tw_tc = c(tw_tc,rmr_result)
ra_result_analyze(paste(pathname,"rmr_TC.csv",sep = '_'),data_matrix,rmr_result[[1]],rmr_result[[2]],rmr_result[[3]])
ra_result_analyze(paste(pathname,"rmr_TC.csv",sep = '_'),data_matrix, rmr_result[[1]], rmr_result[[2]], rmr_result[[3]])
rmr_result[[1]]
ra_result_analyze(paste(pathname,"rmr_TC.csv",sep = '_'),data_matrix, rmr_result[[1]], rmr_result[[2]], rmr_result[[3]])
ra_result_analyze(paste(pathname,"rmr.csv",sep = '_'),data_matrix,rmr_result[[1]],rmr_result[[2]],rmr_result[[3]])
rmr_result
#install.packages('R.matlab')
#library("R.matlab")
#install.packages("readxl")
#install.packages("stats")
#library(stats)
library(readxl)
path <- ('Data(Haolin)')
#input
pathname <- file.path(path,'BE500.xlsx')
#data_1 <- as.vector(readMat(pathname))
data_matrix <- read_excel(pathname, sheet = "P3", skip = 4, col_names = FALSE)
data_matrix <- data.matrix(data_matrix[,2:ncol(data_matrix)])
#data_matrix <- data_matrix[complete.cases(data_matrix),]
#class(data_1)
#print(data_1)
#data_matrix <- as.matrix(as.data.frame(data_1))
source("ra_result_analyze.R")
source("plot/rmr.R")
source("plot/PAMR.r")
source("plot/olmar.R")
source("plot/MARKET.R")
source("plot/BEST.R")
t = nrow(data_matrix)
m = ncol(data_matrix)
tc = 0.0002
varagins = c(5,5,tc)
fid = "rmr-djia.csv"
rmr_result = rmr(fid,data_matrix,varagins)[1]
tw_tc = c(tw_tc,rmr_result)
ra_result_analyze(paste(pathname,"rmr.csv",sep = '_'),data_matrix,rmr_result[[1]],rmr_result[[2]],rmr_result[[3]])
tc = 0.0002
varagins = c(5,5,tc)
fid = "rmr-djia.csv"
rmr_result = rmr(fid,data_matrix,varagins)[1]
ra_result_analyze(paste(pathname,"rmr_TC.csv",sep = '_'),data_matrix,rmr_result[[1]],rmr_result[[2]],rmr_result[[3]])
rmr_result[[2]]
rmr_result[[3]]
tc = 0.0002
varagins = c(5,5,tc)
fid = "rmr-djia.csv"
rmr_result = rmr(fid,data_matrix,varagins)
ra_result_analyze(paste(pathname,"rmr_TC.csv",sep = '_'),data_matrix,rmr_result[[1]],rmr_result[[2]],rmr_result[[3]])
fid = "BEST-djia.csv"
best_result = best_run(fid,data_matrix,tc)
ra_result_analyze(paste(pathname,"BEST_TC.csv",sep = '_'),data_matrix,best_result[[1]],best_result[[2]],best_result[[3]])
pamr_result = pamr_run(fid,data_matrix,tc)
ra_result_analyze(paste(pathname,"pamr_TC.csv",sep = '_'),data_matrix,pamr_result[[1]],pamr_result[[2]],pamr_result[[3]])
pamr_result = pamr_run(fid,data_matrix,tc)
ra_result_analyze(paste(pathname,"pamr_TC.csv",sep = '_'),data_matrix,as.numeric(pamr_result[[1]]),as.numeric(pamr_result[[2]]),as.numeric(pamr_result[[3]]))
olmar_result = olmar_run(fid,data_matrix,tc)
ra_result_analyze(paste(pathname,"olmar_TC.csv",sep = '_'),data_matrix,as.numeric(olmar_result[[1]]),as.numeric(olmar_result[[2]]),as.numeric(olmar_result[[3]]))
pwd
pwd()
